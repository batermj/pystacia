====
TODO
====

- convenience imports in main module
- coverage
- docs
- docstrings
- move lena to png, if no png support delete lena
- dont rely in tests solely on lena
- group methods in image and refer to this order in documentation
- exception in the tests causes os.exit(1) which doesnt trigger atexit
- remove color paramname from everywhere - use fill,
  background and so on - future proof
- move version and author from setup.py into __init__.py [0.1.1]
- more methods for image [0.1.1]
- those semaphores thing possibly should keep week references to any magick resource and clear it on exit [0.1.1]
- move enum lookups based on versions to api.enum module (version param is None) [0.1.1]
- implement colors __getattr__ style called Factory in tinyimg.color [0.1.1]
- more generators from pseudoformats: plasma, checkerboard, gradients etc [0.1.1]
- group tests according to their set up and tear down strategies
- Image.write should obey format when explicitely set, ImageMagick always does it
  from filename, if format is set call get_blob() instead and save to fs in py
  into one class with many test methods [0.1.1]
- compress method that let's you apply compression and reread image, useful for
  preving compression result
- move lazyenym, and compat under util? [0.1.1]
- put generators together under some submodule, name? [0.1.1]
- make string passing possible [x]? [0.1.1]
- fit method [0.1.1]
- should getters and setters be explicit? [0.1.1]
- set_pixel (possible?) [0.1.1]
- lazy init of imagick and function prototypes [0.1.1]
- keep track of showed temp files and delete them on exit, possibly in the
  image object [0.1.1]
- rgb8, rgba8 color factory, and accessors [0.1.1]
- @api_simple_call [0.1.1]
- support for with protocol [0.1.1]
- info method (returns all the crucial magick informations along with loaded libraries and paths)
- extract base class TinyBase with closed, close, with protocol and constructor (under util)? [0.1.1]
- implement other color factories [0.2]
- add env variable to force immediate init of imagick [0.2]
- implement better show tool detecting (eog on linux e.g) and fallback to webbrowser [0.2]
- allow overriding viewer wiith TINYIMG_VIEWER env var
- containers vs formats
- search path alteration logic [0.2]
- smart detecting and lazy loading of API prototypes (based on maybe docs, and decorators)
  once new api submodule also has functions inside [0.2]
- rope in logging in crucial moments, specifically init and finding lib [0.2]
- bench script to test under different version of python [0.2]
- pixel iterators [0.2]
- ping [0.2]
- show should accept zoom factor, passed to resize with point filter, and crop information [0.2]
- show for color creates 32x32 image with color preview [0.2]
- [0.2] hsl, cmyk setters and getters
- implement gravity=(0, 0) gravity=(.5, 1) gravity=('left') on merge, crop, extend, rotate(crop=True), resize [0.2]
- with img.masked(mask) as img:
- with img.canvas() as c:
- thread safety?
- all functions should accept blend as param - merges result on top with this blend
- visual testing framework with reference images
- wave needs phi
- checker in show, zoom, crop
- > and < on color lightness comparison
- color_overlay should become fill once we have blending everywhere
- zip deployment technique with all binaries for all osses

STUFF
=====
- mooar tests
- coverage
- docs
- docstrings
- revise imports, move in function symbols at the end of files
- version bumps
- pyflakes, pep8